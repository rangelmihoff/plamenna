1. Performance –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
Frontend:
	‚Ä¢	Code Splitting:‚Ä®javascript‚Ä®‚Ä®‚Ä®// –í routes.js
	‚Ä¢	const Dashboard = lazy(() => import('./pages/Dashboard').then(module => ({ default: module.Dashboard })));‚Ä®
	‚ó¶	–†–∞–∑–¥–µ–ª—è–Ω–µ –Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –ø–æ –º–∞—Ä—à—Ä—É—Ç–∏ –∑–∞ –ø–æ-–±—ä—Ä–∑–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ
	‚Ä¢	Prefetching:‚Ä®html‚Ä®‚Ä®‚Ä®‚Ä®<!-- –í index.html -->
	‚Ä¢	<link rel="preconnect" href="https://api.example.com">
	‚Ä¢	<link rel="prefetch" href="/assets/ai-models.json" as="fetch">‚Ä®
	‚Ä¢	Bundle Analysis:‚Ä®bash‚Ä®‚Ä®‚Ä®npm run build -- --profile
	‚Ä¢	npx vite-bundle-visualizer‚Ä®
Backend:
	‚Ä¢	–ö–µ—à–∏—Ä–∞–Ω–µ (Redis):‚Ä®javascript‚Ä®‚Ä®‚Ä®// –í productController.js
	‚Ä¢	const cacheKey = `products:${shop._id}:${page}:${searchQuery}`;
	‚Ä¢	const cached = await redis.get(cacheKey);
	‚Ä¢	if (cached) return res.json(JSON.parse(cached));‚Ä®
	‚Ä¢	Compression:‚Ä®javascript‚Ä®‚Ä®‚Ä®app.use(compression({ level: 6 })); // –î–æ–±–∞–≤–µ—Ç–µ –≤ app.js‚Ä®

2. Security –ù–∞—Å—Ç—Ä–æ–π–∫–∏
–û–±—â–∏:
	‚Ä¢	CSP Headers:‚Ä®nginx‚Ä®‚Ä®‚Ä®# –í nginx.conf
	‚Ä¢	add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' *.shopify.com";‚Ä®
	‚Ä¢	Rate Limiting:‚Ä®javascript‚Ä®‚Ä®‚Ä®// –í app.js
	‚Ä¢	const limiter = rateLimit({
	‚Ä¢	  windowMs: 15 * 60 * 1000,
	‚Ä¢	  max: 1000,
	‚Ä¢	  keyGenerator: (req) => req.shop?.shopifyDomain || req.ip
	‚Ä¢	});‚Ä®
Shopify-–°–ø–µ—Ü–∏—Ñ–∏—á–Ω–∏:
	‚Ä¢	Webhook Validation:‚Ä®javascript‚Ä®‚Ä®‚Ä®app.post('/webhooks', express.text({ type: '*/*' }), 
	‚Ä¢	  (req, res) => {
	‚Ä¢	    const hmac = req.get('X-Shopify-Hmac-Sha256');
	‚Ä¢	    if (!Shopify.Utils.validateWebhook(hmac, req.body, SHOPIFY_API_SECRET)) {
	‚Ä¢	      return res.status(401).send('Invalid webhook');
	‚Ä¢	    }
	‚Ä¢	  }
	‚Ä¢	);‚Ä®

3. AI-Specific –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
Cost Management:
	‚Ä¢	–¢–æ–∫–µ–Ω –ª–∏–º–∏—Ç–∏:‚Ä®javascript‚Ä®‚Ä®‚Ä®// –í aiService.js
	‚Ä¢	const MAX_TOKENS = {
	‚Ä¢	  'gpt-4': 8000,
	‚Ä¢	  'claude-3': 4000
	‚Ä¢	};‚Ä®
	‚Ä¢	Fallback —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:‚Ä®javascript‚Ä®‚Ä®‚Ä®async function queryAI(prompt) {
	‚Ä¢	  try {
	‚Ä¢	    return await queryOpenAI(prompt);
	‚Ä¢	  } catch {
	‚Ä¢	    return await queryLlama(prompt); // Fallback –∫—ä–º –ø–æ-–µ–≤—Ç–∏–Ω –º–æ–¥–µ–ª
	‚Ä¢	  }
	‚Ä¢	}‚Ä®
–ö–µ—à–∏—Ä–∞–Ω–µ –Ω–∞ AI –æ—Ç–≥–æ–≤–æ—Ä–∏:
javascript

const cachedResponse = await cache.get(`ai:${md5(prompt)}`);
if (cachedResponse) return cachedResponse;

4. Shopify App-Specific
Embedded App –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
	‚Ä¢	App Bridge –ö–æ–Ω—Ñ–∏–≥:‚Ä®javascript‚Ä®‚Ä®‚Ä®const appBridgeConfig = {
	‚Ä¢	  features: {
	‚Ä¢	    ShoppingCart: { show: false },
	‚Ä¢	    NavigationBar: { show: false }
	‚Ä¢	  },
	‚Ä¢	  enforceFocus: true
	‚Ä¢	};‚Ä®
Theme App Extensions:
json

// –í shopify.app.toml
[[extensions]]
type = "theme_app_extension"
src = "extensions/theme"

5. Database –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
MongoDB –ò–Ω–¥–µ–∫—Å–∏:
javascript

// –í models/Product.js
productSchema.index({ shop: 1, title: 'text', tags: 'text' }, { weights: { title: 10, tags: 5 } });
Connection Pooling:
javascript

// –í config/db.js
mongoose.connect(uri, {
  maxPoolSize: 50,
  socketTimeoutMS: 30000,
  waitQueueTimeoutMS: 30000
});

6. Error Handling & Monitoring
Sentry –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
javascript

// –í errorHandler.js
Sentry.init({ dsn: process.env.SENTRY_DSN });
app.use(Sentry.Handlers.errorHandler());
Custom Errors:
javascript

class AIQuotaExceededError extends Error {
  constructor() {
    super('AI query limit reached');
    this.statusCode = 429;
  }
}

7. Internationalization (i18n)
–î–∏–Ω–∞–º–∏—á–Ω–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø—Ä–µ–≤–æ–¥–∏:
javascript

// –í i18n.js
const loadTranslations = async (locale) => {
  return (await import(`../translations/${locale}.json`)).default;
};
Shopify Locale Sync:
javascript

appBridge.subscribe(Shopify.Context.APP_LANGUAGE_CHANGE, (lang) => {
  i18n.changeLanguage(lang);
});

8. Deployment-Specific
Health Checks:
javascript

// –í app.js
app.get('/health', (req, res) => {
  res.status(mongoose.connection.readyState === 1 ? 200 : 503).json({
    db: mongoose.connection.readyState === 1 ? 'up' : 'down'
  });
});
Docker –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:
dockerfile

# –ú–Ω–æ–≥–æ–µ—Ç–∞–ø–µ–Ω build –∑–∞ frontend
FROM node:18 as builder
RUN npm ci --omit=dev

–¢–µ–∑–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —â–µ –ø–æ–¥–æ–±—Ä—è—Ç:
	‚Ä¢	‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–Ω–æ—Å—Ç: 40-60% –ø–æ-–±—ä—Ä–∑–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ
	‚Ä¢	üîí –°–∏–≥—É—Ä–Ω–æ—Å—Ç: –ó–∞—â–∏—Ç–∞ —Å—Ä–µ—â—É OWASP Top 10 —Ä–∏—Å–∫–æ–≤–µ
	‚Ä¢	üí∏ Cost Efficiency: 30% –Ω–∞–º–∞–ª—è–≤–∞–Ω–µ –Ω–∞ AI —Ä–∞–∑—Ö–æ–¥–∏
	‚Ä¢	üìä –ù–∞–±–ª—é–¥–∞–µ–º–æ—Å—Ç: –ü—ä–ª–Ω–∞ –≤–∏–¥–∏–º–æ—Å—Ç –Ω–∞ –≥—Ä–µ—à–∫–∏—Ç–µ
	‚Ä¢	üåç Global Support: –ï—Ñ–µ–∫—Ç–∏–≤–Ω–∞ –ø–æ–¥–¥—Ä—ä–∂–∫–∞ –Ω–∞ –º–Ω–æ–≥–æ –µ–∑–∏—Ü–∏
–ó–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞ –∏–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ –Ω—è–∫–æ—è –æ—Ç —Ç–µ–∑–∏ —Ç–æ—á–∫–∏, –º–æ–ª—è —É—Ç–æ—á–Ω–µ—Ç–µ –∫–æ—è –æ–±–ª–∞—Å—Ç –≤–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É–≤–∞ –Ω–∞–π-–º–Ω–æ–≥–æ.