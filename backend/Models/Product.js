// backend/models/Product.js
// Defines the Mongoose schema for a Product. Each document represents a product
// synchronized from a Shopify store.

import mongoose from 'mongoose';

const productSchema = new mongoose.Schema({
  // Reference to the Shop this product belongs to.
  shop: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Shop',
    required: true,
    index: true,
  },
  // The unique product ID from Shopify (e.g., 'gid://shopify/Product/12345').
  // Using the GraphQL ID is best practice.
  shopifyProductId: {
    type: String,
    required: true,
    index: true,
  },
  // Product title.
  title: {
    type: String,
    required: true,
    trim: true,
  },
  // Product description (HTML content from Shopify).
  description: {
    type: String,
  },
  // Product vendor.
  vendor: {
    type: String,
  },
  // Product type or category.
  productType: {
    type: String,
  },
  // Product tags.
  tags: [String],
  // Price of the primary variant.
  price: {
    type: Number,
  },
  // Main product image URL.
  imageUrl: {
    type: String,
  },
  // This object stores the structured data payload sent to AI platforms.
  // It's a clean, AI-friendly representation of the product.
  aiStructuredData: {
    type: Object,
  },
  // The SEO meta title generated by our app.
  // We store this separately to not overwrite the original until the user applies it.
  optimizedMetaTitle: {
    type: String,
  },
  // The SEO meta description generated by our app.
  optimizedMetaDescription: {
    type: String,
  },
  // The alt text for the main image, generated by our app.
  optimizedAltText: {
    type: String,
  },
  // A flag to indicate if the product has been optimized by our app.
  isOptimized: {
    type: Boolean,
    default: false,
  },
  // Timestamp of the last successful optimization.
  lastOptimizedAt: {
    type: Date,
  },
}, {
  timestamps: true,
});

// Create a compound index to ensure that each product from a specific shop is unique.
productSchema.index({ shop: 1, shopifyProductId: 1 }, { unique: true });

const Product = mongoose.model('Product', productSchema);

export default Product;
